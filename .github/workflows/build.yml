name: Build
on: [push, pull_request]

jobs:
  build-msvc-arm:
    strategy:
      matrix:
        toolset: ['14.3'] # VS 2022
        arch: [arm, arm64]
        config: [Debug, Release]
      fail-fast: false
    runs-on: windows-2022
    steps:
    - name: Install ninja
      run: choco install -y ninja
    - name: Install Flex & Bison
      run: |
        curl -O https://svn.reactos.org/storage/vperevertkin/flexbison.7z
        7z x flexbison.7z -O${{github.workspace}}\bin
        echo "${{github.workspace}}\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        echo "BISON_PKGDATADIR=${{github.workspace}}\bin\share\bison" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        echo "M4=${{github.workspace}}\bin\m4.exe" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
    - name: Activate VS cmd (${{matrix.arch}})
      uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: amd64_${{matrix.arch}}
        toolset: ${{matrix.toolset}}
    - name: Source checkout
      uses: actions/checkout@v2
      with:
        path: src
    - name: Configure
      run: cmake -S src -B build -G Ninja -DCMAKE_TOOLCHAIN_FILE:FILEPATH=toolchain-msvc.cmake -DARCH:STRING=${{matrix.arch}} -DCMAKE_BUILD_TYPE=${{matrix.config}} -DENABLE_ROSTESTS=1 -DENABLE_ROSAPPS=1
    - name: Build rapps
      if: ${{ matrix.arch == 'arm64' }}
      run: cmake --build build --target rapps -- -k0
    - name: Build drwtsn32
      if: false # ${{ matrix.arch == 'arm64' }}
      run: cmake --build build --target drwtsn32 -- -k0
    - name: Build applications
      if: false # ${{ matrix.arch == 'arm64' }}
      run: cmake --build build --target base/applications/all -- -k0
    - name: Build base module
      if: ${{ matrix.arch == 'arm' }}
      run: cmake --build build --target base/all
    - name: Build control panel applets
      if: ${{ matrix.arch == 'arm' }}
      run: cmake --build build --target dll/cpl/all -- -k0
    - name: Build rosapps
      if: ${{ matrix.arch == 'arm' }}
      run: cmake --build build --target modules/rosapps/all -- -k0
    - name: Build modules/rostests
      if: false # ${{ matrix.arch == 'arm' }}
      run: cmake --build build --target modules/rostests/all -- -k0
    - name: Upload compiled binaries
      if: ${{ matrix.arch == 'arm' }}
      uses: actions/upload-artifact@v2
      with:
        name: reactos-msvc${{matrix.toolset}}-${{matrix.arch}}-${{matrix.config}}-${{github.sha}}
        path: |
          build/base
          build/dll/cpl
          build/modules/rosapps
          !**/CMakeFiles
          !**/cmake_install.cmake
          !**/*.asm
          !**/*.bin
          !**/*.c
          !**/*.def
          !**/*.exp
          !**/*.h
          !**/*.lib
          !**/*.mc
          !**/*.obj
          !**/*.rc
          !**/*.tlb
    - name: Upload debug symbols
      if: ${{ matrix.config == 'Debug' && matrix.arch == 'arm'}}
      uses: actions/upload-artifact@v2
      with:
        name: reactos-syms-msvc${{matrix.toolset}}-${{matrix.arch}}-${{matrix.config}}-${{github.sha}}
        path: build/msvc_pdb
