name: Build
on: [push, pull_request]

jobs:
  build-msvc:
    strategy:
      matrix:
        toolset: ['14.2', '14.1', '14.0'] # VS 2019, 2017, 2015
        arch: [i386]
        config: [Debug, Release]
      fail-fast: false
    runs-on: windows-latest
    steps:
    - name: Install ninja
      run: choco install -y ninja
    - name: Install Flex & Bison
      run: |
        curl -O https://svn.reactos.org/storage/vperevertkin/flexbison.7z
        7z x flexbison.7z -O${{github.workspace}}\bin
        echo "${{github.workspace}}\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        echo "BISON_PKGDATADIR=${{github.workspace}}\bin\share\bison" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        echo "M4=${{github.workspace}}\bin\m4.exe" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
    - name: Activate VS cmd (x86)
      if: ${{ matrix.arch == 'i386' }}
      uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: amd64_x86
        toolset: ${{matrix.toolset}}
    - name: Activate VS cmd (amd64)
      if: ${{ matrix.arch == 'amd64' }}
      uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: amd64
        toolset: ${{matrix.toolset}}
    - name: Source checkout
      uses: actions/checkout@v2
      with:
        path: src
    - name: Configure
      run: cmake -S src -B build -G Ninja -DCMAKE_TOOLCHAIN_FILE:FILEPATH=toolchain-msvc.cmake -DARCH:STRING=${{matrix.arch}} -DCMAKE_BUILD_TYPE=${{matrix.config}}
    - name: Build
      run: cmake --build build  -- -k0
    - name: Generate ISOs
      run: cmake --build build --target bootcd --target livecd
    - name: Upload ISOs
      uses: actions/upload-artifact@v2
      with:
        name: reactos-msvc${{matrix.toolset}}-${{matrix.arch}}-${{matrix.config}}-${{github.sha}}
        path: |
          build/bootcd.iso
          build/livecd.iso

  build-msbuild-i386-w2022:
    name: MSBuild (i386) w2022
    strategy:
      matrix:
        toolset: ['14.3', '14.2', '14.1'] # VS 2022, 2019, 2017
        # arch: [i386] # amd64 not added yet. (See my PR.)
        # config: [Debug] # Project not set up to build the 3 other configs.
      fail-fast: false
    runs-on: windows-2022
    steps:
    - name: Install Flex and Bison
      run: |
        curl -O https://svn.reactos.org/storage/vperevertkin/flexbison.7z
        7z x flexbison.7z -O${{github.workspace}}\bin
        echo "${{github.workspace}}\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        echo "BISON_PKGDATADIR=${{github.workspace}}\bin\share\bison" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        echo "M4=${{github.workspace}}\bin\m4.exe" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
    - name: Add CL to PATH
      uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: amd64_x86
        toolset: ${{matrix.toolset}}
    - uses: actions/checkout@v2
      with:
        path: src
    - name: Configure
      run: |
        mkdir build
        cd build
        cmake -G "Visual Studio 17 2022" -A Win32 -DCMAKE_TOOLCHAIN_FILE:FILEPATH=toolchain-msvc.cmake -DARCH:STRING=i386 ${{github.workspace}}\src
    - name: Build
      run: cmake --build ${{github.workspace}}\build --target bootcd --target livecd
    - name: Upload ISOs
#      if: false # Useless, due to FreeLdr build issue. (CORE-17534)
      uses: actions/upload-artifact@v2
      with:
        name: reactos-w2022-msbuild${{matrix.toolset}}-i386-Debug-${{github.sha}}
        path: |
          build/bootcd.iso
          build/livecd.iso

  build-msbuild-i386-w2019:
    name: MSBuild (i386) w2019
    strategy:
      matrix:
        toolset: ['14.2', '14.1', '14.0'] # VS 2019, 2017, 2015
        # arch: [i386] # amd64 not added yet. (See my PR.)
        # config: [Debug] # Project not set up to build the 3 other configs.
      fail-fast: false
    runs-on: windows-2019
    steps:
    - name: Install Flex and Bison
      run: |
        curl -O https://svn.reactos.org/storage/vperevertkin/flexbison.7z
        7z x flexbison.7z -O${{github.workspace}}\bin
        echo "${{github.workspace}}\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        echo "BISON_PKGDATADIR=${{github.workspace}}\bin\share\bison" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        echo "M4=${{github.workspace}}\bin\m4.exe" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
    - name: Add CL to PATH
      uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: amd64_x86
        toolset: ${{matrix.toolset}}
    - uses: actions/checkout@v2
      with:
        path: src
    - name: Configure
      run: |
        mkdir build
        cd build
        cmake -G "Visual Studio 16 2019" -A Win32 -DCMAKE_TOOLCHAIN_FILE:FILEPATH=toolchain-msvc.cmake -DARCH:STRING=i386 ${{github.workspace}}\src
    - name: Build
      run: cmake --build ${{github.workspace}}\build --target bootcd --target livecd
    - name: Upload ISOs
#      if: false # Useless, due to FreeLdr build issue. (CORE-17534)
      uses: actions/upload-artifact@v2
      with:
        name: reactos-w2019-msbuild${{matrix.toolset}}-i386-Debug-${{github.sha}}
        path: |
          build/bootcd.iso
          build/livecd.iso

  build-msbuild-i386-w2016:
    name: MSBuild (i386) w2016
    strategy:
      matrix:
## '14.0' fails, for some reason...
## CMake Error at sdk/cmake/msvc.cmake:545 (message):
##   Generating pre-processed linker options for target 'freeldr_pe' failed with
##   error 2.
## -- Configuring incomplete, errors occurred!
## Call Stack (most recent call first):
## See also "D:/a/reactos/reactos/build/CMakeFiles/CMakeOutput.log".
##   boot/freeldr/freeldr/CMakeLists.txt:272 (add_linker_script)
## See also "D:/a/reactos/reactos/build/CMakeFiles/CMakeError.log".
##         toolset: ['14.1', '14.0'] # 2017, 2015
        toolset: ['14.1'] # 2017
        # arch: [i386] # amd64 not added yet. (See my PR.)
        # config: [Debug] # Project not set up to build the 3 other configs.
      fail-fast: false
    runs-on: windows-2016
    steps:
    - name: Install Flex and Bison
      run: |
        curl -O https://svn.reactos.org/storage/vperevertkin/flexbison.7z
        7z x flexbison.7z -O${{github.workspace}}\bin
        echo "${{github.workspace}}\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        echo "BISON_PKGDATADIR=${{github.workspace}}\bin\share\bison" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        echo "M4=${{github.workspace}}\bin\m4.exe" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
    - name: Add CL to PATH
      uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: amd64_x86
        toolset: ${{matrix.toolset}}
    - uses: actions/checkout@v2
      with:
        path: src
    - name: Configure
      run: |
        mkdir build
        cd build
        cmake -G "Visual Studio 15 2017" -A Win32 -DCMAKE_TOOLCHAIN_FILE:FILEPATH=toolchain-msvc.cmake -DARCH:STRING=i386 ${{github.workspace}}\src
    - name: Build
      run: cmake --build ${{github.workspace}}\build --target bootcd --target livecd
    - name: Upload ISOs
#      if: false # Useless, due to FreeLdr build issue. (CORE-17534)
      uses: actions/upload-artifact@v2
      with:
        name: reactos-w2016-msbuild${{matrix.toolset}}-i386-Debug-${{github.sha}}
        path: |
          build/bootcd.iso
          build/livecd.iso
